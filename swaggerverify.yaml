openapi: 3.0.3
info:
  title: Patrol Management Application
  version: '1'
  description: >-
    Patrol Management Application  allow a user to create checkpoint and assign them to a Patrol route, members of staff can be assigned to the Patrol route.  The Patrol route can be scheduled for a specific time and how long the patrol should take can be set for the route.

    A user who has been assigned to the route can see the route plotted on a map, the system will show where the checkpoints are for the route
    
    The user will need to carry out a risk assessment before they start the patrol
    
    A user will be able to check-in to the checkpoints as they carry out the patrol, the system will record the time they checked in
    
    The user will be able to record any incidents they find as they carry out the patrol
    
    There will be a set of reports the user can view based on the patrols that have been carried out.
  contact:
    email: gift.felix@zinc.systems
  license:
    name: Patrol Management API 1.0
    url: >-
      https://docs.google.com/document/d/1gWhnxz6eujdJUMlsHQoTdAXEBYS93VQluJaYdcj3ruE/edit
servers:
  -
    url: 'https://api.synapse.staging.zinc.systems/V1'
    description: 'Staging Server'
  -
    url: 'https://api.synapse.zinc.systems/V1'
    description: 'Production Server'
    
externalDocs:
  description: Find out more about Patrol Management APIs
  url: >-
    https://zinc-digital.atlassian.net/wiki/spaces/SPR/pages/2386526212/Patrol+Management+Requirements

tags:

  - name: API Communication
    description: Exposes endpoints related used for external communication
  - name: Checkpoint Service
    description: Exposes endpoints related to checkpoint service
  - name: Route Service
    description: Exposes endpoints related to route service
  - name: Patrol Service
    description: Exposes endpoints related to patrol service

security:
  - AWSAuthtoken: []
    AWSApiKey: []

paths:

  /routes/checkpoint/{checkpointId}/remove:
    delete:
      tags:
        - API Communication
      parameters:
      - $ref: '#/components/parameters/CheckpointId'
      summary: Remove checkpoint from route API
      responses:
        201:
          $ref: '#/components/responses/RouteBooleanResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
  
  /patrols/has-started:
    put:
      tags:
        - API Communication
      requestBody:
        $ref: '#/components/requestBodies/HasPatrolStartedRequest'
      summary: Check if patrol has started
      responses:
        201:
          $ref: '#/components/responses/PatrolBooleanResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'        

  /checkpoint:
    post:
      tags:
        - Checkpoint Service
      summary: Add a new checkpoint
      description: Add a new checkpoint
      requestBody:
        $ref: '#/components/requestBodies/CheckpointRequest'
      responses:
        201:
          $ref: '#/components/responses/CheckpointGuidResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          

  /checkpoint/byids:
    post:
      tags:
        - Checkpoint Service
      summary: Get a Checkpoint List Based On the ChceckPointIDs  
      description: Get a Checkpoint List Based On the ChceckPointIDs 
      requestBody:
        $ref: '#/components/requestBodies/CheckPointbyIdsRequest'

      responses:
        200:
          $ref: '#/components/responses/CheckpointListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'  
                
    
  /checkpoint/verification-type:
    get:
      tags:
        - Checkpoint Service
      summary: Retrieves verification type entries
      description: 
        Retrieves the verification type entries which have been created
      responses:
        200:
          $ref: '#/components/responses/VerificationResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          
  /checkpoint/{checkpointId}:
    parameters:
      - $ref: '#/components/parameters/CheckpointId'
    put:
      tags:
        - Checkpoint Service
      summary: Update an existing checkpoint
      description: Update an existing checkpoint
      requestBody:
        $ref: '#/components/requestBodies/CheckpointRequest'
      responses:
        200:
          $ref: '#/components/responses/CheckpointBooleanResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
    get:
      tags:
        - Checkpoint Service
      summary: Retrieves checkpoint entry
      description: Retrieves a single checkpoint
      responses:
        200:
          $ref: '#/components/responses/CheckpointResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          
  /checkpoint/status/{checkpointId}:        
    put:
      tags:
        - Checkpoint Service
      parameters:
      - $ref: '#/components/parameters/CheckpointId'
    
      requestBody:
        $ref: '#/components/requestBodies/CheckpointDisableRequest'
      summary: Enable/Disable checkpoint
      description:  Enable/Disable a checkpoint
      responses:
        200:
          $ref: '#/components/responses/CheckpointBooleanResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          
 
          
  /checkpoint/site/{siteId}:
    get:
      tags:
        - Checkpoint Service
      summary: Retrieves checkpoint entries related to site
      description: Retrieves checkpoint entries related to site
      parameters:
      - $ref: '#/components/parameters/SiteId'
      responses:
        200:
          $ref: '#/components/responses/CheckpointListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
                  
  /checkpoint/:
    get:
      tags:
        - Checkpoint Service
      summary: Retrieves a set of Checkpoint entries range On the Basis Of OrgId Passed Through token 
      description: 
        Retrieves the  set of Checkpoint entries
     
      responses:
        200:
          $ref: '#/components/responses/CheckpointListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'    
                  
          
          
  /routes:
    
    post:
      tags:
        - Route Service
      summary: Add a new route
      description: Add a new route
      requestBody:
        $ref: '#/components/requestBodies/RouteCheckpointRequest'
      responses:
        201:
          $ref: '#/components/responses/RouteGuidResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
    
  /routes/{routeId}:
    parameters:
      - $ref: '#/components/parameters/RouteId'
    patch:
      tags:
        - Route Service
      summary: Update an existing route
      description: Update an existing route
      requestBody:
        $ref: '#/components/requestBodies/RouteCheckpointRequest'
      responses:
        200:
          $ref: '#/components/responses/RouteBooleanResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
    get:
      tags:
        - Route Service
      summary: Retrieves route entry
      description: Retrieves a single route
      responses:
        200:
          $ref: '#/components/responses/RouteCheckpointResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
    
  /routes/{routeId}/status/{routeStatusType}:        
    patch:
      tags:
        - Route Service
      parameters:
      - $ref: '#/components/parameters/RouteId'
      - $ref: '#/components/parameters/RouteStatusType'
      summary: Enable/Disable route
      description:  Enable/Disable a route
      responses:
        200:
          $ref: '#/components/responses/RouteBooleanResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          
  /routes/checkpoint/{checkpointId}:
    get:
      tags:
        - Route Service
      summary: Retrieves route entries related to checkpoint
      description: Retrieves route entries related to checkpoint
      parameters:
      - $ref: '#/components/parameters/CheckpointId'
      responses:
        200:
          $ref: '#/components/responses/RouteListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          
  /routes/site/{siteId}:
    get:
      tags:
        - Route Service
      summary: Retrieves route entries related to site
      description: Retrieves route entries related to site
      parameters:
      - $ref: '#/components/parameters/SiteId'
      responses:
        200:
          $ref: '#/components/responses/RouteListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          
  /routes/{routeId}/checkpoint-details:
    get:
      tags:
        - Route Service
      summary: Retrieves set of route checkpoints related to route
      description: Retrieves set of route checkpoints related to route
      parameters:
      - $ref: '#/components/parameters/RouteId'
      responses:
        200:
          $ref: '#/components/responses/RouteCheckpointDetailListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
            
            
  /patrols:
    post:
      tags:
        - Patrol Service
      summary: Add a new patrol schedule
      description: Add a new patrol schedule
      requestBody:
        $ref: '#/components/requestBodies/PatrolPostRequest'
      responses:
        201:
          $ref: '#/components/responses/PatrolGuidResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          
    get:
      tags:
        - Patrol Service
      summary:  Retrieves Patrols By OrgId
      description: 
        Retrieves Patrols By OrgId
      responses:
        200:
          $ref: '#/components/responses/PatrolListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
  
  # /patrols/risk-assessment/{scheduleEventId}:
  #   post:
  #     tags:
  #       - Patrol Service
  #     summary: Create risk assessment in patrol schedule event
  #     description:  Create risk assessment in patrol schedule event
  #     parameters:
  #     - $ref: '#/components/parameters/ScheduleEventId'
  #     requestBody:
  #       $ref: '#/components/requestBodies/PatrolRiskAssessmentRequest'
  #     responses:
  #       200:
  #         $ref: '#/components/responses/PatrolBooleanResponse'
  #       400:
  #         $ref: '#/components/responses/ErrorResponse'
  #       401:
  #         $ref: '#/components/responses/ErrorResponse'
  #       403:
  #         $ref: '#/components/responses/ErrorResponse'
  #       500:
  #         $ref: '#/components/responses/ErrorResponse'
          
  /patrols/checkin/{scheduleEventId}:
    post:
      tags:
        - Patrol Service
      summary: Make a Check In While Patroling On A Checkpoint
      description: This Api makes a checkin entry in the database.
      parameters:
      - $ref: '#/components/parameters/ScheduleEventId'
      requestBody:
        $ref: '#/components/requestBodies/PatrolCheckinRequest'
      responses:
        201:
          $ref: '#/components/responses/PatrolBooleanResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse' 
          
   
    parameters:
      - $ref: '#/components/parameters/ScheduleEventId'
    get:
      tags:
        - Patrol Service
      summary: Get Checkins Based On ScheduleEventId
      description: This Api Fetches The Set Of Checkins For A ScheduleEventId.
      responses:
        200:
          $ref: '#/components/responses/PatrolCheckInListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'             
                  
          
               
  /patrols/start/{scheduleEventId}:
    put:
      tags:
        - Patrol Service
      summary: Start patrol event
      description: Start patrol event
      parameters:
      - $ref: '#/components/parameters/ScheduleEventId'
      requestBody:
        $ref: '#/components/requestBodies/PatrolScheduleEventRequest'
      responses:
        200:
          $ref: '#/components/responses/PatrolBooleanResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          
  /patrols/abandon/{scheduleEventId}:
    put:
      tags:
        - Patrol Service
      summary: Abandon patrol event
      description: Abandon patrol event
      parameters:
      - $ref: '#/components/parameters/ScheduleEventId'
      requestBody:
        $ref: '#/components/requestBodies/PatrolScheduleEventRequest'
      responses:
        200:
          $ref: '#/components/responses/PatrolBooleanResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
  
  /patrols/complete/{scheduleEventId}:
    put:
      tags:
        - Patrol Service
      summary: Complete patrol event
      description: Complete patrol event
      parameters:
      - $ref: '#/components/parameters/ScheduleEventId'
      requestBody:
        $ref: '#/components/requestBodies/PatrolScheduleEventRequest'
      responses:
        200:
          $ref: '#/components/responses/PatrolBooleanResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          
   
  /patrols/{patrolId}:
    parameters:
      - $ref: '#/components/parameters/PatrolId'
    patch:
      tags:
        - Patrol Service
      summary: Update an existing patrol
      description: Update an existing patrol by Id
      requestBody:
        $ref: '#/components/requestBodies/PatrolPutRequest'
      responses:
        200:
          $ref: '#/components/responses/PatrolBooleanResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
    get:
      tags:
        - Patrol Service
      summary: Retrieves patrol entry
      description: Retrieves a single patrol
      responses:
        200:
          $ref: '#/components/responses/PatrolResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
    
                  
  /patrols/user/{userId}:
    get:
      tags:
        - Patrol Service
      summary:  Retrieves Assigned Patrols
      description: 
        Retrieves the Assinged Patrol entries
      parameters:
      - $ref: '#/components/parameters/UserId'
      responses:
        200:
          $ref: '#/components/responses/PatrolListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          
  
  /patrols/route/{routeId}:
    get:
      tags:
        - Patrol Service
      summary: Retrieves patrol entries related to route
      description: Retrieves patrol entries related to route
      parameters:
      - $ref: '#/components/parameters/RouteId'
      responses:
        200:
          $ref: '#/components/responses/PatrolListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          
  
  /patrols/calendar-schedule-events:
    get:
      tags:
        - Patrol Service
      summary: Retrieves set of calendar schedule events related to event
      description: Retrieves calendar schedule events related to event
      parameters:
      - $ref: '#/components/parameters/QueryEventId'
      - $ref: '#/components/parameters/FromDate'
      - $ref: '#/components/parameters/ToDate'
      responses:
        200:
          $ref: '#/components/responses/PatrolEventListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'


  /patrols/calendar-schedule-events/site/{siteId}:
    get:
      tags:
        - Patrol Service
      summary: Retrieves set of calendar schedule events related to site
      description: Retrieves calendar schedule events related to site
      parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: '#/components/parameters/FromDate'
      - $ref: '#/components/parameters/ToDate'
      responses:
        200:
          $ref: '#/components/responses/PatrolEventListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'

  
  /patrols/schedule-event/{scheduleEventId}:
    get:
      tags:
        - Patrol Service
      summary: Retrieves saved schedule event 
      description: Retrieves saved schedule event 
      parameters:
      - $ref: '#/components/parameters/ScheduleEventId'
      responses:
        200:
          $ref: '#/components/responses/PatrolScheduleEventResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'

 
  /patrols/schedule-events/{eventId}:
    get:
      tags:
        - Patrol Service
      summary: Retrieves saved schedule events related to event 
      description: Retrieves saved schedule events related to event  
      parameters:
      - $ref: '#/components/parameters/EventId'
      responses:
        200:
          $ref: '#/components/responses/PatrolScheduleEventListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse' 
  

  /scheduling:
    post:
      tags:
        - Scheduling Service
      summary: Creates Google Events  
      description: Creates Google Events   
      requestBody:
        $ref: '#/components/requestBodies/ScheduleServiceEventRequest'
      responses:
        200:
          $ref: '#/components/responses/ScheduleServiceCreateEventResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse' 

  /scheduling/list:
    post:
      tags:
        - Scheduling Service
      summary: Retrieves Google Calendar events
      description:  Retrieves Google Calendar events
      requestBody:
        $ref: '#/components/requestBodies/ScheduleServiceEventListRequest'

      responses:
        200:
          $ref: '#/components/responses/SchedulingServiceEventListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'      
     
  
     
components:
  securitySchemes:
    AWSAuthtoken:
      type: apiKey
      description: 'AWS Cognito format IdToken. Required for all calls to Patrol services'
      name: Authorization
      in: header
    AWSApiKey:
      name: x-api-key
      in: header
      type: apiKey
      description: 'AWS API Gateway format ApiKey. Required for all calls to Patrol services'
  parameters:
    # ContextId:
    #   name: x-context-id
    #   in: header
    #   description: 'Optional context id for tracing'
    #   required: false
    #   schema:
    #     type: string
    EventId:
      name: eventId
      in: path
      description: Event Id
      required: true
      schema:
        type: string
    ScheduleEventId:
      name: scheduleEventId
      in: path
      description: Scheduled Event Id (Sub Event)
      required: true
      schema:
        type: string
        
    UserId:
      name: userId
      in: path
      description: User id
      required: true
      schema:
        $ref: '#/components/schemas/Guid'
    PatrolId:
      name: patrolId
      in: path
      description: Patrol id
      required: true
      schema:
        $ref: '#/components/schemas/Guid'
    CheckpointStatusType:
      name: checkpointStatusType
      in: path
      description: Status
      required: true
      schema:
        $ref: '#/components/schemas/CheckpointStatus'
    RouteStatusType:
      name: routeStatusType
      in: path
      description: Status
      required: true
      schema:
        $ref: '#/components/schemas/RouteStatus'
       
    RouteId:
      name: routeId
      in: path
      description: Route id
      required: true
      schema:
        $ref: '#/components/schemas/Guid'
    CheckpointId:
      name: checkpointId
      in: path
      description: Checkpoint id
      required: true
      schema:
        $ref: '#/components/schemas/Guid'
    SiteId:
      name: siteId
      in: path
      description: Site id
      required: true
      schema:
        type: integer
    RiskAssessmentId:
      name: riskAssessmentId
      in: path
      description: Risk Assessment id
      required: true
      schema:
        type: string
    QueryEventId:
      name: eventId
      in: query
      description: Event id
      required: false
      schema:
        type: string
    FromDate:
      name: fromDate
      in: query
      description: The beginning of the date range (UTC), formatted as "YYYY-MM-DDTHH:MM:SS" (e.g. "1969-07-21T02:56:15")
      required: true
      schema:
        type: string
        format: date-time
    ToDate:
      name: toDate
      in: query
      description: The end of the date range (UTC), formatted as "YYYY-MM-DDTHH:MM:SS" (e.g. "1969-07-21T02:56:15")
      required: true
      schema:
        type: string
        format: date-time
    
    PageToken:
      name: pageToken
      in: query
      description: Token used to Retrieves additional matches
      required: false
      schema:
        type: string
  schemas:
    Guid:
      title: A GUID Identifier
      description: A Guid identifier
      type: string
      pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
    GuidObject:
      title: A GUID Identifier Object
      description: A Guid identifier
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Guid'
    DateTime:
      title: A Date & Time
      description: Datetime range (UTC), formatted as "YYYY-MM-DDTHH:MM:SS" (e.g. "1969-07-21T02:56:15")
      type: string
      format: date-time
    BooleanStatus:
      title: Entry Creation
      type: object
      properties:
        flag:
          type: boolean
    Numeric:
      title: Entry Numeric Data
      type: number
      format: float
      pattern: '\-?\d+\.\d+'
      
    Time:
      title: Entry Time Data (time in seconds)
      type: integer
      format: int64
      pattern: '^[0-9]*$' 
      
    CheckpointStatus:
      type: string
      description: Checkpoint Status
      readOnly: true
      example: 'ENABLED'
      enum:
        - ENABLED
        - DISABLED
    RouteStatus:
      type: string
      description: Route Status
      readOnly: true
      example: 'ENABLED'
      enum:
        - ENABLED
        - DISABLED 
    PatrolStatus:
      type: string
      description: Patrol Status
      readOnly: true
      example: 'READY'
      enum:
        - READY
        - STARTED
        - ABANDONED
        - COMPLETED
        
    Error:
      title: Error Response
      type: object
      properties:
        msg:
          type: string
          
    
    # Checkpoint Data     
    CheckpointGuid:
      title: Checkpoint Guid Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/CheckpointEntryStruct'
        data:
          $ref: '#/components/schemas/GuidObject'
    CheckpointBoolean:
      title: Checkpoint Boolean Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/CheckpointEntryStruct'
        data:
          $ref: '#/components/schemas/BooleanStatus'
    VerificationTypeEntryData:
      title: Verification Type Entry
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Route Id
          readOnly: true
        name:
          type: string
        title:
          type: string
    
    CheckpointList:
      title: Set of Checkpoint Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/CheckpointEntryStruct'
        data:
          $ref: '#/components/schemas/CheckpointEntriesData'
          
    Checkpoint:
      title: Checkpoint Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/CheckpointEntryStruct'
        data:
          $ref: '#/components/schemas/CheckpointEntryData'
   
    Verification:
      title: Verification Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/VerificationTypesEntryStruct'
        data:
          type: array
          items:
            $ref: '#/components/schemas/VerificationTypeEntryData'
    
    VerificationTypesEntryStruct:
      title: Struct Definition for Checkpoint
      type: object
      properties:
        c:
          type: string
        v:
          type: string
          pattern: '^V\d$'
      example: '{"c":"VerificationTypes","v":"V1"}'  
      
    CheckpointEntryStruct:
      title: Struct Definition for Checkpoint
      type: object
      properties:
        c:
          type: string
        v:
          type: string
          pattern: '^V\d$'
      example: '{"c":"Checkpoint","v":"V1"}'  
      
    CheckpointEntriesData:
      title: Set of checkpoint Entries
      type: array
      items:
        $ref: '#/components/schemas/CheckpointEntryData'
      minItems: 0
      
    LocationData:
      title: Location Entry
      type: object
      
      properties:
        lat:
          allOf:
            - $ref: '#/components/schemas/Numeric'
        long:
          allOf:
            - $ref: '#/components/schemas/Numeric'
    ImageMetaData:
      title: ImageMetaData
      type: object
      
      properties:
        imageId:
          type: string
                

    CheckpointDisableData:
      title: Checkpoint Disable/Enable
      type: object
      required:
        - isDisabled
      properties:  
        isDisabled:
           type: number
           format: number
           example: 1

    CheckpointEntryData:
      title: Checkpoint Entry
      type: object
      required:
        - name
        - siteId
        - verificationTypeId
        - location
      properties:
        id:
          # Returned by GET, not used in POST/PUT/PATCH
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Checkpoint Id
          readOnly: true
        siteId:
          type: number
          title: Site Id  
        verificationTypeId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Verification Type Id
        name:
          type: string
          format: string
          example: 'Checkpiont 1'
        location:
          $ref: '#/components/schemas/LocationData'
        referenceImages:
          type: array
          items:
            type: string
        imageMetaData: 
          $ref: '#/components/schemas/ImageMetaData'
        plotLocation:
          type: boolean
        toleranceInMeter:
          type: number
          format: float
          description: actually tolerance value
          example: 40
        status:
          $ref: '#/components/schemas/CheckpointStatus'
        description:
          type: string
        note:
          type: string
        risks:
          type: string  
        createdDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Create date of entry. Default to now() if not supplied
          readOnly: true
        modifiedDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Last modify date of entry. Default to now() if not supplied
          readOnly: true
        createdBy:
          allOf:
            - $ref: '#/components/schemas/Guid'
            - title: User Id creating entry. Default to current use if not supplied
          readOnly: true
        modifiedBy:
          allOf:
            - $ref: '#/components/schemas/Guid'
            - title: User Id that last modified the entry. Default to current use if not supplied
          readOnly: true
   
    
    
    # Route Data
    RouteGuid:
      title: Route Guid Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/RouteEntryStruct'
        data:
          $ref: '#/components/schemas/GuidObject'
          
    RouteBoolean:
      title: Route Boolean Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/RouteEntryStruct'
        data:
          $ref: '#/components/schemas/BooleanStatus'      
    RouteList:
      title: Set of Route Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/RouteEntryStruct'
        data:
          $ref: '#/components/schemas/RouteEntriesData'
          
    Route:
      title: Route Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/RouteEntryStruct'
        data:
          $ref: '#/components/schemas/RouteEntryData'
          
    RouteCheckpoint:
      title: Route Checkpoints Entries Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/RouteEntryStruct'
        data:
          $ref: '#/components/schemas/RouteCheckpointEntryData'
   
    RouteCheckpointDetailList:
      title: Checkpoints Entries Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/RouteEntryStruct'
        data:
          items:
            $ref: '#/components/schemas/RouteCheckpointDatailData'
       
    RouteEntryStruct:
      title: Struct Definition for Route
      type: object
      properties:
        c:
          type: string
        v:
          type: string
          pattern: '^V\d$'
      example: '{"c":"Route","v":"V1"}'  
    
    
    RouteEntriesData:
      title: Set of Route Entries
      type: array
      items:
        $ref: '#/components/schemas/RouteEntryData'
      minItems: 0
    
    RouteCheckpointEntryData:
      title: Route Entry along with Checkpoints Entries
      type: object
      properties:
        route:
          allOf:
            - $ref: '#/components/schemas/RouteEntryData'
          title: Route 
        checkpoints:
          items:
              $ref: '#/components/schemas/RouteCheckpointData'
              
    RouteCheckpointDatailData:
      allOf:
        - $ref: '#/components/schemas/CheckpointEntryData'
        - type: object
          properties:
            tags:
              type: array
              items:
                type: string
    
    RouteCheckpointData:
      title: Route Entry along with set of Checkpoint
      type: object   
      properties:
        checkpointId:
          $ref: '#/components/schemas/Guid'
        siteId:
          $ref: '#/components/schemas/Guid'
        position:
          type: integer
          format: int
        tags:
          type: array
          items:
            type: string
        
        
      
    RouteEntryData:
      title: Route Entry
      type: object 
      required:
        - name
        - orgId
      properties:
        id:
          # Returned by GET, not used in POST/PUT/PATCH
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Route Id
          readOnly: true
        orgId:
          title: Organisation Id
          type: integer
          readOnly: true
        name:
          type: string
          format: string
          example: 'Route 1'
        timeFrame:
          allOf:
            - $ref: '#/components/schemas/Time'
          title: Time Frame(In Seconds)
        tolerance:
          allOf:
            - $ref: '#/components/schemas/Time'
          title: Tolerance(In Seconds)
        status:
          $ref: '#/components/schemas/RouteStatus'
        isAssigned:
          type: boolean
          readOnly: true
        description:
          type: string
        note:
          type: string
        createdDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Create date of entry. Default to now() if not supplied
          readOnly: true
        modifiedDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Last modify date of entry. Default to now() if not supplied
          readOnly: true
        createdBy:
          allOf:
            - $ref: '#/components/schemas/Guid'
            - title: User Id creating entry. Default to current use if not supplied
          readOnly: true
        modifiedBy:
          allOf:
            - $ref: '#/components/schemas/Guid'
            - title: User Id that last modified the entry. Default to current use if not supplied
          readOnly: true
      
    # Patrol Data  
    PatrolGuid:
      title: Patrol Guid Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/PatrolEntryStruct'
        data:
          $ref: '#/components/schemas/GuidObject'
     
    PatrolBoolean:
      title: Patrol Boolean Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/PatrolEntryStruct'
        data:
          $ref: '#/components/schemas/BooleanStatus'
    PatrolList:
      title: Set of Patrol Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/PatrolEntryStruct'
        data:
          items:
            $ref: '#/components/schemas/PatrolEntryData'
          
    Patrol:
      title: Patrol Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/PatrolEntryStruct'
        data:
          $ref: '#/components/schemas/PatrolEntryData'
          
    PatrolEventList:
      title: Patrol Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/PatrolEntryStruct'
        data:
          items:
            $ref: '#/components/schemas/PatrolEventData'
            
    PatrolCheckInList:
      title: Set of Checkin Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/PatrolEntryStruct'
        data:
          items:
            $ref: '#/components/schemas/PatrolCheckInData' 
         
    ScheduleEventList:
      title: Set of Checkin Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/ScheduleServiceEventStruct'
        data:
          items:
            $ref: '#/components/schemas/ScheduleEventGetData'


    ScheduleServiceEventList:
      title: Set of Checkin Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/PatrolEntryStruct'
        data:
          items:
            $ref: '#/components/schemas/ScheduleEventGetData'        


    ScheduleServiceEventCreate:
      title: Event Create Response Of Scheduling Service
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ScheduleServiceEventCreateResponseData'

    ScheduleEvent:
      title: Set of Checkin Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/PatrolEntryStruct'
        data:
          $ref: '#/components/schemas/ScheduleEventGetData'

    ScheduleEventListResponse:
      title: Set of Events
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/ScheduleServiceEventStruct'
        data:
         type: array
         items:
          $ref: '#/components/schemas/ScheduleServiceEventListData'

                    
    PatrolEntryStruct:
      title: Struct definition for Patrol
      type: object
      properties:
        c:
          type: string
        v:
          type: string
          pattern: '^V\d$'
      example: '{"c":"Patrol","v":"V1"}'

    ScheduleServiceEventStruct:
      title: Struct definition for ScheduleServiceEvent
      type: object
      properties:
        c:
          type: string
        v:
          type: string
          pattern: '^V\d$'
      example: '{"c":"Event","v":"V1"}' 
    
    CheckInTaskData:
      title: Checkin Task Entry
      type: object
      required:
        - name
        - orgId
      properties:
        task:
          type: string
        isCarriedOut:
          type: boolean
        description:
          type: string
          
    ScheduleEventData:
      type: object
      required:
        - patrolId
        - eventId
      properties:
        patrolId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Patrol Id
        routeId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Route Id
        eventId:
          type: string


    ScheduleServiceEventListData:
      type: object
      required:
        - summary
        - startDateAndTime
        - endDateAndTime
        - recurrence
        - timeZone
      properties:
      
        summary:
          type: string      

        startDateAndTime:
          type: string  

        endDateAndTime:
          type: string   

        recurrence:
           type: string 

        timeZone:
            type: string

        calendarId:
            type: string

    ScheduleServiceEventData:
      type: object
      required:
        - summary
        - startDateAndTime
        - endDateAndTime
        - recurrence
        - timeZone
      properties:
      
        summary:
          type: string      

        startDateAndTime:
          type: string  

        endDateAndTime:
          type: string   

        recurrence:
           type: string 

        timeZone:
            type: string

        calendarId:
            type: string     


    ScheduleServiceListPayloadData:
      type: object
      required:
        - maxResults
        
      properties:
      
        maxResults:
          type: number      

        startDate:
          type: string  

        endDate:
          type: string   

        query:
           type: string 

        eventId:
            type: string

        calendarId:
            type: string             
                   
         
        
    RiskAssessmentData:
      allOf:
        - $ref: '#/components/schemas/ScheduleEventData'
        - type: object
          properties:
            riskAssessmentId:
              type: string
              title: Risk Assessment Id  
            resources:
              type: array
              items:
                type: string


    ScheduleServiceEventCreateResponseData:
        allOf:
        - type: object
          properties:
            eventId:
              type: string
              title: Event Id   Of the event Created
            IcalUId:
              type: string
              title: IcalUId Unique  Id   Of the event Created  
                        
                
    
    ScheduleEventGetData:
      allOf:
        - $ref: '#/components/schemas/RiskAssessmentData'
        - type: object
          properties:
            id:
              allOf:
              - $ref: '#/components/schemas/Guid'
              readOnly: true
            assignedUserId:
              allOf:
              - $ref: '#/components/schemas/Guid'
              readOnly: true
            statusExecutionTime:
              type: integer
              readOnly: true
            status:
              $ref: '#/components/schemas/PatrolStatus'
            orgId:
              type: integer
              readOnly: true
            createdByName:
              type: string
              readOnly: true
            createdDate:
              allOf:
                - $ref: '#/components/schemas/DateTime'
                - title: Create date of entry. Default to now() if not supplied
              readOnly: true
            modifiedDate:
              allOf:
                - $ref: '#/components/schemas/DateTime'
                - title: Last modify date of entry. Default to now() if not supplied
              readOnly: true
            createdBy:
              allOf:
                - $ref: '#/components/schemas/Guid'
                - title: User Id creating entry. Default to current use if not supplied
              readOnly: true
            modifiedBy:
              allOf:
                - $ref: '#/components/schemas/Guid'
                - title: User Id that last modified the entry. Default to current use if not supplied
              readOnly: true
    
                
    PatrolEventData:
      title: Patrol Event
      type: object
      
      properties:
        patrolId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Patrol Id
        routeId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Route Id
        eventId:
          type: string
          description: EventId from google scheduler api(iCalUId)
        scheduleEventId:
          type: string
          description: Scheduled EventId from google scheduler api (id)
        riskAssessmentId:
          type: string
          title: Risk Assessment Id  
        assignedId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          description: Patrol User Id
        displayName:
          type: string
          description: Patrol User Name
        email:
          type: string
          description: Patrol User Email
        eventName:
          type: string
          description: Event Name
        eventDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
        startTime:
          type: integer
        endTime:
          type: integer
      
    PatrolCheckInData:
      title: CheckIn Payload
      type: object
      required:
        - siteId
        - routeId
        - patrolId
        - checkpointId
        - scheduleEventId
        - eventId
       
      properties:
        id:
          # Returned by GET, not used in POST/PUT/PATCH
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Checkpoint Id
          readOnly: true
        patrolId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Patrol Id  
        routeId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Route Id
        scheduleEventId:
          type: string
          readOnly: true
        eventId:
          type: string
        checkpointId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: CheckPoint Id 
        siteId:
          type: integer
          title: Site Id  
        orgId:
          type: integer
          title: Org Id 
          readOnly: true 
        checkInTime:
          title: Checkin time (unix epoch timestamp)
          type: integer
          readOnly: true
        carriedTasks:
          items:
            $ref: '#/components/schemas/CheckInTaskData'
        description:
          type: string
        isSkipped:
          type: boolean
          default: false
        createdDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Create date of entry. Default to now() if not supplied
          readOnly: true
        modifiedDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Last modify date of entry. Default to now() if not supplied
          readOnly: true
        createdBy:
          allOf:
            - $ref: '#/components/schemas/Guid'
            - title: User Id creating record. Default to current use if not supplied
          readOnly: true
        modifiedBy:
          allOf:
            - $ref: '#/components/schemas/Guid'
            - title: User Id that last modified the record. Default to current use if not supplied
          readOnly: true      
                   
  
    PatrolPutEntryData:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          format: string
          example: 'Patrol 1'  
        eventId:
          type: string
          title: Event Id  
        isRiskAssessmentMandatory:
              type: boolean
        riskAssessmentId:
          type: string
          title: Risk Assessment Id 
        riskAssessmentSummary:
          type: string
          title: Risk Assessment Id 
        riskAssessmentResources:
              type: array
              items:
                type: string  
        scheduleDate:
         allOf:
            - $ref: '#/components/schemas/DateTime'
         title: Schedule Date
        scheduleEndDate:
         allOf:
            - $ref: '#/components/schemas/DateTime'
         title: Schedule End Date
       
        isRepeated:
          type: boolean
          example: false
        assignedUserId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Assigned User Id  
        tolerance:
          type: integer
          format: int64
          example: 100000
        additionalInfo:
          type: string

    CheckPointByIdRequestData:
      title: CheckPoint By Ids
      type: object
      properties:
       
        checkpointIds:
          type: array
          items:
             type: string
          example: ["str1", "str2", "str3"]
            
    
    
    PatrolPostEntryData:
     allOf:
        - $ref: '#/components/schemas/PatrolPutEntryData'
        - type: object
          required:
            - routeId
          properties:
            routeId:
              allOf:
                - $ref: '#/components/schemas/Guid'
              title: Route Id 
  
    PatrolEntryData:
       allOf:
        - $ref: '#/components/schemas/PatrolPostEntryData'
        - type: object
          properties:
            id:
              # Returned by GET, not used in POST/PUT/PATCH
              allOf:
                - $ref: '#/components/schemas/Guid'
              title: Patrol Id
              readOnly: true
            orgId:
              title: Organisation Id
              type: integer 
              readOnly: true
            isScheduled:
              type: boolean
              example: true
              readOnly: true 
            IsStarted:
              type: boolean
              readOnly: true 
            createdByName:
              type: string
              readOnly: true
            createdDate:
              allOf:
                - $ref: '#/components/schemas/DateTime'
                - title: Create date of entry. Default to now() if not supplied
              readOnly: true
            modifiedDate:
              allOf:
                - $ref: '#/components/schemas/DateTime'
                - title: Last modify date of entry. Default to now() if not supplied
              readOnly: true
            createdBy:
              allOf:
                - $ref: '#/components/schemas/Guid'
                - title: User Id creating entry. Default to current use if not supplied
              readOnly: true
            modifiedBy:
              allOf:
                - $ref: '#/components/schemas/Guid'
                - title: User Id that last modified the entry. Default to current use if not supplied
              readOnly: true
   
  responses:
    CheckpointGuidResponse:
      description: Return checkpoint id
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckpointGuid'
    CheckpointBooleanResponse:
      description: Return boolean
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckpointBoolean'  
    RouteGuidResponse:
      description: Return route id
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RouteGuid'
    RouteBooleanResponse:
      description: Return boolean
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RouteBoolean'        
    PatrolGuidResponse:
      description: Return patrol id
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatrolGuid' 
    PatrolBooleanResponse:
      description: Return boolean
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatrolBoolean' 
    ErrorResponse:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BooleanResponse:
      description: Entry For created/updated response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BooleanStatus'
            
    VerificationResponse:
      description: Set of verification type entries response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Verification'   
    CheckpointListResponse:
      description: Set of checkpoint entries response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckpointList'
    CheckpointResponse:
      description: Checkpoint entry response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Checkpoint'
               
    
    RouteListResponse:
      description: Set of route entries response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RouteList' 
            
    RouteCheckpointDetailListResponse:
      description: Set of route entries response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RouteCheckpointDetailList'
            
    RouteResponse:
      description: Route entry response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Route'
   
    RouteCheckpointResponse:
      description: Route along with checkpoint entries response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RouteCheckpoint'
    PatrolListResponse:
      description: Set of patrol entries response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatrolList'
    PatrolEventListResponse:
      description: Set of patrol event entries response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatrolEventList'
    PatrolCheckInListResponse:
      description: CheckIn entry response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatrolCheckInList' 
    PatrolResponse:
      description: Patrol entry response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Patrol' 
    PatrolScheduleEventResponse:
      description: Schedule Action Payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScheduleEvent'
    PatrolScheduleEventListResponse:
      description: Schedule Action Payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScheduleEventList'


    SchedulingServiceEventListResponse:
      description: Schedule Action Payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScheduleEventListResponse'          


    ScheduleServiceCreateEventResponse:
      description: Schedule Service Event Create Response 
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScheduleServiceEventCreate'        
            
  requestBodies:
    CheckpointRequest:
      description: Checkpoint entry request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckpointEntryData'
    CheckpointDisableRequest:
      description: Checkpoint Disable request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckpointDisableData'        
    
    PatrolScheduleEventRequest:
      description: Schedule Action Payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScheduleEventData' 

    ScheduleServiceEventRequest:
      description: Schedule Service Create Event  Payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScheduleServiceEventData'         

    ScheduleServiceEventListRequest:
      description: Schedule Service  Event  List Payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScheduleServiceListPayloadData'         
                    
            
    PatrolRiskAssessmentRequest:
      description: Risk Assessment Payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RiskAssessmentData' 
            
    
    
    PatrolCheckinRequest:
      description: CheckIn  request Payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatrolCheckInData'  
            
    RouteCheckpointRequest:
      description: Route entry request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RouteCheckpointEntryData'
            
    PatrolPostRequest:
      description: Patrol entry request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatrolPostEntryData'
      
    HasPatrolStartedRequest:
      content:
        application/json:
          schema:
            properties:  
              routeIds:
                type: array
                items:
                  $ref: '#/components/schemas/Guid'
            
    PatrolPutRequest:
      description: Patrol entry request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatrolPutEntryData'

    CheckPointbyIdsRequest:
        description: CheckpointByIds
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckPointByIdRequestData'


